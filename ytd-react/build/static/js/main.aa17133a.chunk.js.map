{"version":3,"sources":["components/Download.js","components/Input.js","App.js","reportWebVitals.js","index.js"],"names":["Download","obj","this","props","link","className","style","visibility","undefined","video","title","src","image","alt","srcset","href","audio","class","count","Component","loaderCss","css","Input","state","response","post","responseToPost","load","callApi","a","fetch","json","body","status","Error","message","handleSubmit","e","preventDefault","link2","indexOf","finallink","slice","api","setState","method","links","then","res","counter","catch","err","console","log","onSubmit","type","placeholder","value","onChange","target","size","color","loading","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aa17133a.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\n\n\n\nclass Download extends Component {\n\n\n    render() {\n        let arraystr = this.props.link;\n\n\n      \n        let obj = arraystr\n\n\n        return (\n            <>\n                <div className=\"container\" style={{ visibility: (obj.video === undefined) ? \"hidden\" : \"visible\" }} >\n                    <h4>{obj.title}</h4>\n                    <div><img src={obj.image} alt=\"\" srcset=\"\" /></div>\n\n                    <div className=\"linksDiv\">\n                        <div> <a href={obj.audio} className=\"links\"><i class=\"fas fa-file-audio\"></i></a> </div>\n                        <div> <a href={obj.video} className=\"links\"><i class=\"fas fa-file-video\"></i></a> </div>\n\n\n                    </div>\n\n                </div>\n\n                <div className='data' style={{ visibility: !(obj.video === undefined) ? \"hidden\" : \"visible\" }}>\n\n                    <div className=\"profile\"><p className=\"count\">{this.props.count}</p><p>üî•üîå</p></div>\n\n                    <div className=\"text\" >\n                        <p>to go through source code <a href=\"https://github.com/00lohit/youtube_downloader\">click here</a> üßê</p>\n                        <p className=\"explain\">stack used for this project <strong> React , Flask</strong> and <strong> Python </strong> (pytube library) ‚úîÔ∏è</p>\n\n                    </div>\n\n\n                </div>\n\n            </>\n        )\n    }\n\n}\n\nexport default Download","import React, { Component } from 'react'\nimport Download from './Download'\nimport { BeatLoader } from 'react-spinners'\nimport { css } from '@emotion/react'\n\nconst loaderCss = css`\nmargin-top:25px;\nmargin-bottom: 25px;\n`\n\nclass Input extends Component {\n\n    state = {\n        response: '',\n        post: '',\n        responseToPost: '',\n        load:'',\n    };\n\n    \n    callApi = async () => {\n        const response = await fetch('https://apiytd.herokuapp.com/ok');\n        const body = await response.json();\n        if (response.status !== 200) throw Error(body.message);\n\n        return body;\n    };\n\n    componentDidMount() {\n        this.callApi()\n            .then(res => this.setState({ response: res.counter }))\n            .catch(err => console.log(err));\n    }\n\n\n\n\n\n    handleSubmit = async e => {\n        e.preventDefault();\n\n\n        let apiHead = \"https://apiytd.herokuapp.com/yt/\"\n\n        let link = this.state.post;\n\n        let link2 = (link.indexOf(\"v=\") === -1) ? link.indexOf(\"e/\") + 2 : link.indexOf(\"v=\") + 2;\n        let finallink = link.slice(link2)\n\n        let apiTail = finallink\n        let api = apiHead + apiTail\n\n        this.setState({ load: true })\n\n        const response = await fetch(api, {\n            method: 'POST',\n            body: ({ post: this.state.post }),\n        });\n        const body = await response.json();\n        this.setState({ responseToPost: body.links });\n        this.setState({ load: false })\n    };\n\n\n\n\n\n    render() {\n\n        return (\n            <div className=\"full\">\n\n                <div className=\"Input\">\n                    <form onSubmit={this.handleSubmit}>\n                        <input\n                            className='paste'\n                            type=\"text\"\n                            placeholder=\"Paste YouTube link\"\n                            value={this.state.post}\n                            onChange={e => this.setState({ post: e.target.value })}\n                        />\n                        <button className='find' type=\"submit\"><i class=\"fa fa-folder\"></i></button>\n                    </form>\n                </div>\n\n                <div className=\"Output\">\n\n                    <BeatLoader css={loaderCss} size={20} color='DodgerBlue' loading={this.state.load} />\n                    <Download link={this.state.responseToPost} count={this.state.response} />\n\n                </div>\n\n\n            </div>\n        )\n    }\n}\nexport default Input\n","import './App.css';\nimport Input from './components/Input';\n\nfunction App() {\n\n\n  return (\n    <div className=\"App\">\n      <Input></Input>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}